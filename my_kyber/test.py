from __future__ import annotations
import hashlib
import itertools
import numpy as np
import copy
#import sha3

n = 256
k = 2
q = 3329
eta1 = 3
eta2 = 2
du = 10
dv = 4
tree = [
  0, 64, 32, 96, 16, 80, 48, 112, 8, 72, 40, 104, 24, 88, 56, 120,
  4, 68, 36, 100, 20, 84, 52, 116, 12, 76, 44, 108, 28, 92, 60, 124,
  2, 66, 34, 98, 18, 82, 50, 114, 10, 74, 42, 106, 26, 90, 58, 122,
  6, 70, 38, 102, 22, 86, 54, 118, 14, 78, 46, 110, 30, 94, 62, 126,
  1, 65, 33, 97, 17, 81, 49, 113, 9, 73, 41, 105, 25, 89, 57, 121,
  5, 69, 37, 101, 21, 85, 53, 117, 13, 77, 45, 109, 29, 93, 61, 125,
  3, 67, 35, 99, 19, 83, 51, 115, 11, 75, 43, 107, 27, 91, 59, 123,
  7, 71, 39, 103, 23, 87, 55, 119, 15, 79, 47, 111, 31, 95, 63, 127
]
zetas = [17**i % q for i in range(n)]
n_inv = pow(n, q-2, q)

##### Test vector
tv_d = 0x934d60b35624d740b30a7f227af2ae7c678e4e04e13c5f509eade2b79aea77e2   ## Given
tv_G = 0xb72f9bc85c0a13b9d041586fd583feb12afd5a402dd33b43543f5fa4eb436c8db18e3017096ab1466262272a3d59a6a9d2678fa9cc5db8a1888486ed4deba8fd
tv_rho = tv_G >> 256
tv_sigma = tv_G & ((2**256)-1)
tv_A = 0xcf02f1089309d602e3062805680b6802f6070a0318027c00ca0af4027906ec07ca02a70287031109fc020e0bc302d808d30c8306a40747057b055d007b024108d7093007190b6e0c220abd0a3d055e09770180084d05af019e0cc10ce6024408e80aa604ca02e4029f069508500b30089909c20954000e03db07f002cf0ba70c2d084e073d0c7c08490cbf04ad03f00c080bbc0c500728036905a40078008d0aa408dd0b58015909d0033e01e80cb10a9a0336059405a205d408ba009b02e5056b001a09fc0bb404100190029c058b0b86045301c80aef0b05053a00c708c707ed07940b6b0b31090f01b300d1060904790ca10302035c036808890a47003f097b054205550ce60a47091f08b9059a02d80bd009a10b3203340c79047802020432039a056b080408190a540a75095e0a7800b502820a88063c084e060f076804b40acd0b56094e0554077c09100aa7082c0b410695058307ab0a7803330a66062302e0059109b9031f043f05ee018709fd018b00aa056e06d9026e072806da0a4a0aa509f90aa50790079606ce03a40c57071009a500c70b2d04c902890bf90b10061f075003e305ed0bc7018c05c2023003c700fb07e8037d0636039203750a9008700ac809a105c9023b0370081f07dd06df08c40ad807bb07f1043f0401008a06f4023f04160c1b01da085608cf05070638024f0b110abe006101a502150263064406ae01fa0bd4049507010cbb035a007f01710331065804d901e4039a0b6f0024051c0b8d01ff0c4505810cd506d9027807ad0a6a0aa209290a7604cb026703570066006204c208620039059206cb05ae03150bb502b002a4064d01860012027504bf041c04fc0c4101c8011b072903f50291079d0bfb0bc703220a600cdd08b5014a0c520b99078a0c84074d07380adb0b910c10091a038302a70819014d071f02e8004f07b0089700db00a00445007908e0045104c205d601c800e104ca09350507008a09910baf09b1044f07a8046f085a0a23045902bf0532066703ee01d703fa0b2c0c4e03b70bbb0aaf0cd30ab607d008d500b30c67086a09330b780a9d044c071b06d50bea07fd051a048d06d00a52015404df08e4081706d304150aed04d707d400470c6e0aa60b3e07ab023f0ab00b350c93066e0a5f013a06d30afc02590a2108380c3b04b3005304cc09e10b07021402d00937032b010b00c3064507be05c8087900780b63031b0c0c0825050d0c7102cd09fd059f0785092004930310096904450827034b07e6091c0c630bd603610ae704a204fc01100a19038b082b01a9057a059b06e303300bcc02f001280b91016d08eb005507c8095e049e0b8400b30bdc0053077c0b6d0219054e02da0bfb047703d708dc02440aab02c405260a310a3c07be002c0b8902b106cd0ce106ee076c0a36087d04e00041015b09a009580bcc003a01a605820042033106490b810b5207a9014e0bd407860b15049a06770b7c08930a5f0976093d0812029403810c2503b50ae2047e02f200e206d209310bd00372013c08b20636043301d103f30b8004e806a0038402d801a40ac10be50c82080b06ce06ce0741079709050a27000c0899079509490183004806960a7902200af301b308f905bd08670b00058705b7001b0573047904ff07fa0b9a0484020808a00ce9032003800b0001d10a660cde04a904010bc704d809f504e704bc0b8400ad035b06fe01b8037e060e060b04ca04e302970c58014d05bf09400ad909f7095f0a5d0072011e00350156014b0aa80632098e07ee0057019e081a082508c10c3309b90516049d050809d70c6b02ae06d50ca001d901e400440ca505a40258077901bc0cd7083e067f0aae016107540bb2056d03f00af60799080b0255061806f800070a0806b804420c7b09f303c906380229080e0cc40b91086105cd075b06a3083a06430b2d0a26087d0a0d0b3e01120632054f0b6d00490c66061302df0bed002108ae03c900a003010048054a09f4073401b6060b078300b007ca0bfa0b2801b70bf403b9063005b80c97059608c001e7017e0a19060c0102062c0904040a07ed0c2504e203c5073c00300ba90043013d02be0bc105cb0aa60c4500570028085609850ad00452058003530125039800e90a3c021f025a002308100cd30a68091c027d02230a0e0b070a5706830487042904db08a3094e03440cf8031c04cc0b660c76027107380b840658098c036c0cbf0b2601410953088608b108a3049d038706cc03090a8d085501f90be50a1300e7014909f801c1003800a105a2060e0b7309da04e601d80a6c0673023d084e01a30ac101950c6a062600dd0a0e086f074e003d065b05aa0c950983027b04e40975030c08fa007c0a7307e301dc019309040ab808d707d60aec0a7307f20bad0b88078e08de08f806910bf50c440a900a590aec04ed060901810c4406bc0a9f03930779055d093805700a00038c0a9800540c88074b00eb040a09ea087502f30293029d0cef093709620c7904910b4c008300250216046401db08310a9f05f206510684056d09d4017c0b610116006304cc037a07d9074c050a0aa6054f0c39042704730c99002804260b8c088e02fc0bf8011d0b600ab60626064409fb0b73089207b509a307b3049907210cc80a790bfc08f109310ae9013902e703f10cd20089079e0c8203560b1d058e00c8051901f103640b6a0bca000b054c04f109240210029b0c3009080b9c0ba00aae04b00b9e09a9013d00a9001600aa070d05cf051f07460224042506e2084e0ace04e402c204d2019b042602960380034d0329032f0c700c3604b409760c010c5e04bf07a209fe07970355084702b60b3a058006b7034408
tv_s = 0x0000ffff0000feffffffffff00000100ffff0100020000000100000000000100ffff0100feff0000ffff0100ffffffff01000000ffff000001000000ffffffff0000ffff0000000000000000fffffeffffffffff0000000000000100ffff01000100ffff01000000000000000000ffff010000000100ffff00000100ffff0000000000000000feff0000ffff010001000000ffff02000100010000000000ffff0200ffff02000100ffff0000000000000200ffff0000feff000000000300010000000100000000000100ffffffff01000100ffff000000000000feff02000000010001000000000000000200000002000000fdffffff0200020002000200ffffffff010001000000feff010001000200feffffff010001000000ffff0000ffff02000000feff0000000000000000fffffeff000000000000ffff0100feffffff0000fdff0100fffffeff00000200fffffeffffff02000000ffff00000100000002000200fffffeff00000100fffffeff0100ffffffffffffffffffff0200feff0100feffffffffffffffffffffff010001000000fefffeff00000200ffff010001000000fefffeff0000feff0100feff0000fffffffffeff00000100010000000100000001000000ffffffff0200ffff020000000000ffff020000000200ffffffff0200fdff01000100ffff020001000000ffff00000100ffff010001000200fdff0100ffff02000000ffff010000000000030000000100020000000200010001000100000001000000ffff0000feff0100ffff0000ffffffff00000000fffffeff0100000000000100000000000200010003000100ffff000001000100010002000100feff01000000ffff010000000000feff0100feff00000100fffffffffeff0100000000000100feffffff0000ffff0000ffff01000000fffffeffffffffffffffffff03000100ffff0000ffff010000000100ffff0100ffff01000000010000000200ffffffff0100fefffffffffffeffffff0200ffff01000000ffffffff0000000001000100fffffeff0000ffff010000000000ffff0100fefffeff0000ffff01000000feff00000300ffff00000100feffffff0100feff0100feff0100feff0100ffff010000000000ffff01000000feffffff0100fffffdffffffffffffff0100fefffeffffff0000ffff0100fefffffffeff0100010001000100ffffffff000001000100010000000000ffff0000feff00000100ffffffffffff01000000ffff01000200ffff0000feff02000000fefffeff0000feffffff000000000200010001000100feff0000ffff01000000ffff00000100feff02000200ffff03000000ffff000000000000ffff00000100ffff00000100ffff02000000000000000000ffff0000ffff00000300ffff0000ffff01000000000001000000
tv_e = 0xffff0000ffff01000000ffff0200ffff01000000000001000000ffff00000100feff0000ffff0000ffffffffffff01000000ffffffff010002000000ffff0100ffffffffffffffff000001000000ffff0000010002000100000001000200ffff000001000000010001000100feff00000000010001000100fffffeff0000ffff0000010001000000fefffeffffff00000200ffff0000fffffeff0000fffffffffeff03000100fffffeffffff00000000010001000100020001000100ffff0000000001000100ffff01000100ffff0100fffffeff00000000000001000000000000000000fffffffffffffffffeff01000000000002000200000000000000000001000000fefffefffeff00000200000001000100010000000100000001000100ffffffff0000fefffeff0100020001000100ffff0100ffff01000000ffff0100010001000200ffff000001000000feff0000020001000100000000000100feffffff0200fdff0200020001000100ffff010001000000ffff00000200000002000100ffffffffffff02000000feff0000000000000000feff0100010001000000ffff0100ffff000000000000ffffffff0100ffff0100ffff0100020000000000ffff01000200ffff0200ffff0000010000000100fffffeff0000ffff0000feffffff000000000100fffffffffeff00000000ffff020001000000feffffffffffffff0100ffff02000100feffffff01000000feff00000000010000000200ffff00000100ffff0200feff0000ffff0100ffff0100feffffffffff0000feff00000100feffffff000000000200ffff0000feff0100ffff0100fffffffffeff01000100020002000100ffff0300ffff000001000100ffff01000000010000000100000001000100000000000000ffff0100feff00000100ffff01000000000000000100ffff00000100ffffffff0000fdff0100ffff0000ffffffffffff00000000ffffffff0000010000000100020000000000000000000100ffff0000ffff0000feff0000feffffff01000000ffffffffffffffff00000000ffff0000ffff0100fefffeffffffffffffff00000000ffff0000feff010000000000ffff00000200fffffeffffffffff0000020002000000ffff0100010000000100ffff01000000feff000002000100ffffffff0000feff0000ffff02000100000000000000feff000000000000feff00000100000000000100ffff00000000010001000000ffff0000ffff0100ffff010001000000000000000100000000000100020001000100feff03000000030001000000010001000000010000000000ffff0100ffff02000200010000000000ffffffff0000ffff01000200fffffffffeff010001000000ffff0000000000000100020000000000ffffffff0100fefffffffeff00000200
tv_s_ = 0xd5ffddff62fdf50418fb2d0055ffcafca302dc03eafbe7032e0630fc7e011a05e0f943068d04faffa10366ff1805b5025702c201e3042e0344008cfaf4faabfa47012afd7b03c1fe79ffbf0209fc16fccefda5008e01c702bcfff9024105a2006afecdfaabfe02ffe3fe41fe46031f051efd68039b0025fbba0473fa2fffa4ffacfb4906bbfda30415069a04560464037ffb41fd58fe76fd8c02aafa85f93e0432fcf800270387fd1ffdf2039ffb10fe0001bcffc3f92902e0fd15fb89fbd60123fd61fc4efb5efb9b03b5fa59007a04f3ffbfffd4f97d067000fbfbb2022affeb03c4fb6c020d03b70249048e04cdfdbdfe7afffefa74fd98026afcb4f988ff57fb7e055ffceef98e00aaffc0fbc300fa0022004cfda3fd56040bfb31046dfa7f054c04d90277fd2d03f1055602dc045e05f0fada020e0410038bfea602abf92efa3801e7fa1201f0fb02fc6b02d0008e042efd66fe660120fe8f03c8f955051205c1fc6cff58fd4f04f5ff5efe84005ffe1e006bff69fdffff76fe9dfb04fcd8fd7cfb4b03bf00c4fea2fe3d01edfacefb53ff2d008d02e8fe41feecfaed05c0fc2b05fe056cfce0fe5b0107034b064f05e8f9d3fb3dff5206eb01dc04f700cdf9ce05d8fa5005250235fd1b069afb8eff7001bbfb4efc52fe46fcd601fbfb26fdaffc8af9a7005b02bdfca3f9fe0199fb2ffa4503190517030403c6fb3a06b5fa8cfbc3fcb805b6008205b8058cfc2f055e02f7fa4804befbf9fa3b023f02a8fa76064d061900f1ff22002a04b0fcdf04bc05ee0594fba8028ffc680677041c06b2fd6f03ea01ec0042fe31fd53fd9fff22fe9f0338fa8e059701b0fe9e03b5fe08fa91fc9a050efd7bfb88faa8fb6101d501f4fef9fa38002804550216055103e0047504c2047c04aef941027dfd44005701c40060fc8301270470ff9efe7efb1dfdc1fcf50488011606f503dbf901fe41ff3bfca602ddf994fb3b031304e5fd1300d9fa480051fe1efa28ff4bfd28fdf5f9aafcc3fe9e05a501d3fd2ffe05ff7706930235ffe3051c0390fd7efae703a4ff69002bfcda030d0032065d06a1fae2ff55014f00400014fffffd1ffb9101bc043efd0c05080512fa1b05dc03f20596fc640091fb2effa9fb200637fb42ff82005402d3006ffc56fbb2fe64fdae009a020f03030189fc52040dff6cff960300fd0cfd40fd9a034300c4fce601b3f93cffc003df024a04eafa20fb110469056afde8fd9efb41fff3fec3fb2901300493fad40154017402b3004501fa0021032a05f40240ffae0354009ffd08fb1cfde7f921063102c300a1fa3cfce80397ff8c01700698fbf00064051805c3ffa3ff520149fe4200c90230ff9d043bfb1e0421041f0299fddb032c02cc04a702a6fff7fb1affd703ac05c6fe58ff65fb96fcdcf91a063efa65061b02c5fa2e06
tv_e_ = 0x62006a03e40549fb42fb30fa1401bafce5ff26fd30048bf96904c7ffa2fc6cfb51058c03fd041d06a9fd290470fab7fec0fca5fe12ff6a06bf04aefe12fab8fc62010bfda30458052efe6406fafe14ff2afd7bfcd6f98300d3fddafec70553fb76057e0401ff6e00d501a905570103ff46067505f60429ffbefa97f9c7ff14fabb054b02b2fbf10480fb03fa2cfcdf04b8fef5fb9f00f4024e0494fdb5058505b4fa8cfae2f90b000206800612035bfe61fd47fb8b03f4fb7f007100f8f929fd0001ef01e7fa2005faff65fef5fb64fc820365000bfbc70158fcb70353fc40ffb8fcd4fb02fd13060700bb0320fd4304fcfcc0051604640110020a055c0126fe5b03dbff29015305e804e3fba8fd9a05e505f1fdddfff9fd27061100f6fb74fade05a204e70577fb94016cfb19fe70fc40fbc302beffe403c400010617025d0576fcfcfb15ff77054b0009ffa5fe3706120153fcce05b2ff9bff7ffb3c0501007201a4f96dfef3fa3706b005b804daf90bfc080164ff4bff0b067f0283fe5a01d1f9300545059efb4a02daf93efe53fcda04cdfd970206fd29ff310349fc6c04b3fb7bfd22fddcfe98f9a90351facc02fafddf03750187ff57fb41062604d1fec5f9d003c5f92ffd8afb16fcbefbb6f9c8046f0049036f03610218000d02dbffbefd81fa9105560034fd35fbb300ca045a0615ffabfe60fb48fa96fa68fa3a06e0006603ed02affbbbfa360264fcd30407039a00450455069c0475fb3afd840156fc9303f301f2fff2043c068b012ffd08fa74fa2400980222ff3d0689fec5ff34fefe03ed0076003f059e02ca003dfe0501da023506f6fb5ffde0f9e4fb55018dfe1d03ea019205e5fa50ff6401730388011ffc6502a600b2f97f0510fc5d05bc0031fbcffb6500b6fcb6ff6b04220177feeffc64024b0244fb1bff58fe96fb9ffc24fa6a0688fd66ff2e0045015efb260361ff540040ff3105dd04ecfc0605f3036f0126fb5a031a038b020f006cfe6c029700b3ff3f02140231fb71ff2b053dfd4f02d7019e0077027a0560fcccf95f042c01d7050d0135ff61fe18fbc6fcc4fa4e00b4fb7c020cfbe002ef01fdfd84faae028ff9cff9fe053dfb93fbeefae6029700ecf970fbeff98a051e0609feaf014afd2b03f8fe93f9ce02e6fcd50497fa2b05dc04f1ffab0169fa6afb8efb7c062f0242fdbe02b90595004dfb7afc6b02dc01aafed1fed7fb2203bf0235fd2efd5e06a4fcb9fd2f023101bbfdaf03e5faebfdbffeddff450614fab20022025cffcc030905c4fb9efbc8fb63ffaffdb9036000c5fbbb01ebf969fe50020dfb8401d8006e0265057afc7ffe91013efc93fef304e804befbcefb23fae402e6fa2cfd2805e3fe36059003b0fea9035106600231fbf4fe77feeefd0e04a4035d06d5f92dfada0025fc0e02150630008203
tv_As = 0xfd035201b50143fd0c00a20514050904e0027ffb5ffad90246fe69fc6bfbf002ad059604ff0558043201fb032efcb6fb75045a0548030504140422039a00bffe22fb9afe6704f2fb080180fe48fce6fddeff08febb03c700c6fd68ffd500ac01f2021ffea7032f0412028c041eff79fd5afbba00f0fe22fe2001e605d00101fd51fa9b032001b704befb38fd4c051f006ffbf200f0030d052902390186fc6605a1ff340166ff0601bd0476044cfa6dfe57fb13fe07000e04faff52fedd01050032ff68fb78fd11fe140512fc2ffc14ff2f03fdffe801b50191fa4a0218fa7aff4c0391fdaaff0ffe5a0272fa00057efacafcc4018ffef1fe6006e303effc08060e033703be02cb01340610fa2cfa59021e02a0faa600ba0115ff74fffe01900449008f0329fe4104d9fa8f05fdff0505fc03960344fcbdf9310330001f015606b5fc61ff790500ff6004b302ca01a40095fa0406a4fd7a0314fa89fdfa0365024d0140036affb8022bfd13fa2301d6fb2a01e305e2fa01020906e605720510fd4b01beffac023605b8fa4506f704cafbba0532041bfd64fee605d9fc870036053a006c0233fb5405ddfaf3fd4afe0901defff104f9fdf1ff0b00dbfaaa020afbe0014f01e5fa3003dbfc1c018bffef03b000f1fa46023200d8fc5cfaeef940fe2cfef0056a0159023afa85fb81f93bfb8dfcf303e8fe52fa58fa27faaffb17fed0fd6b01590332febffdbcfaa20031000505de0491fa140473fff0f9f2fb42017603b604960227ffab011301abfc6e0436fe240452017d05b6f9e4fbd902a6013afceafa65fb7dfac0f972fbf3fbea0147fc4cff54068403a5033d04f405bdfec5fa18fae1fbf6fe6803d5ff7d001bfb01001f00be00680068062b04c801d100feff2305330293fefeff52fbea04dd0247fc2701e000c8fe28016a06e9faabfc3a01f8f9bdfa6a069bfa4cfbd203ab011fffb2fa8100cafff4018405d500c1fe43fc92fff6fc6d00effecf0261fadaf90afda600ff040ffec6fa22fe47fd2ffec60223fd62fbca02cb00330497f9bdfcd9f92dfaefffa604dd023dfcdf014dfe770084009ffc9ff9310188fba4fba9022afa1200fc045b065500eb02c2044105f204dbfe74fd3cfa5a0404fea7fe65fafb05a4ffeb030a0132fe7dfda700270202fc4c011dfe8f032afd8d05230248050eff9601c4fa63ff40fd0803000007fbd2fda60213ff20fdc403c6057a06740412fd64fdd9023000ccfbd501cffd5f03ce032a065805490150048ffa5cfabb01d9fdd601a903a3fd9e0385fcf2f9dc04b3fa60022705e0ff36047605f705160565fd89faf4fb83fa87fbb501a80484056c0358fcf9029ff91afe4c009dfa80065bfc4703cefe5302e6fbd8fd79fd82ff4f034afd5efd56fda0051ffe7afac5fc4b069afeaffa5c002503f0fb4d037803
tv_t_nonred = 0x5f04bc0499078cf84efbd2ff2806c300c502a5f88ffe64fcaf0230fc0df85cfefe0a2208fc0a750adbfe24089ef66dfa3501ff035a026f0ad308d001acfa77fb84fca5fb0a094a0136ffe40442fbfafc08fd83fa91fd4a0199fb42fe9c06fffc68089d02a8029d04e703350a75007cfca0012f06e6034bfddefb7dff970115f70c00e605d2fca8093ef73bf77801fe0427fae7fc8f0401087706cdfe3b02eb0a55fac0fb48f91101bf0af60a5efdc8fcb8f85af9920302007900c3fed5fb2efd320057fd5ff831030e0577fa24f878fbb1066200f3fc7c03e9f601066bf6bafe040065f9acfc220461022dfe2002c1fec6f98407a50255007008ed084bfe2e0469061203e7031e071c0bf3f5d4f7f307030891f88300b3ff3c0585fff4fd04ff270631081004b8ff6dfcfb0016fe75013cff590602fca1fdf50331063603b30b2bf95dfb8e047704ab04bc016f00db06a7fb570272032c03aff908f936096602bf02e4fcd7fdabfd6203c3ffdb05b0f535fdeb0646fa4c01140c6508f5036afe1cfbee04f107d40002fd1f0035031df8940aff01b2ff6afb0f050a00d0fca209edfbe7ff55f8300475f49c019bf8d503d8fdd0086eff78ff62fb1c01d006dbf9a5fb1f05aaf45f0065f832fd49fba5fd780560fb8f05a10339ff74fafbfb1bfeeafb7100fb06af026ef7baf634fa0500e702080393fdb2f5a0f4bdf417f65104b0fed1044606e1f97af8f2fc06fd04050c087805d6fe690a0f0465f52cf9c602ccff4908890419ff9d064f0736fe9d013ef898fe76011508d8f8210262016b016efae8fe52fcf3fafffe10febdfc27004cfd2602890c7aff04011dfed801120052f935fdcbfd88044dfe25ffe1018efe89013efc23030e011a00aa09d8fd2e06ba00540002fef8feb4fc08fb5509ff03befa16fe440313016cfc850541f941f8d9fd1cf42701f20301fa7afb170509fd450213fad5000aff2507610ac1fdc703360001011cf8c70309025a0570fa46f876ff3d01b2044e00dafc53f9b8fc5a03030072ff39fd68034203ad09f7f589f638fe59fbc605b30512029efaf7fc13fb3bfbd20053f81bfc3dfc68fe93fda600aef4c0028bfe2a00530628fe55002f00d80772ff60f7acf549fe8e03c5046ef8aa07eefc16070200c5f74b008dfdfc0699f67706f9028003d5fef6ff8dfdd6008a05c50306f82102f9029d034dfb81f73d008204bdfdf1fb9bffe8083909a90140fac2037dffe9fdfbfd06038afb0e07b3fe150417042601950aa3f40efbdd0335fda205b20867f93cff4df855f98b026cfec002ec009b0121fedf0347082300e9fe61fb62fee8ff01f834003906c201ff014b01e1075df5e8f96ffa81fd660187f96f08b1fd890776ff88fc2201d305af057bf852fccdfb8e032d021efe22032000c7f889fb81fc330505027d03fa06
tv_t_red = 0x5f04bc0498fa8d054efbd2ff2806c300c502a6058ffe64fcaf0230fc0e055cfefdfd21fbfbfd74fddbfe23fb9f036dfa3501ff035a026efdd2fbd001acfa77fb84fca5fb09fc4a0136ffe40442fbfafc08fd83fa91fd4a0199fb42fe9bf9fffc67fb9d02a8029d04e70334fd75007cfca0012f06e6034bfddefb7dff970116040c00e605d2fca7fc3f043c047801fe0427fae7fc8f0400fb7706cdfe3b02eafd55fac0fb49061101befdf5fd5efdc8fcb9055b06920302007900c3fed5fb2efd320057fd600531030e0577fa250578fbb0f96200f3fc7c03ea0301066c03bafe04006606acfc220461022dfe2002c1fec6f983faa50255006ffbecfb4bfe2e0469061203e7031dfa1bfef402d504f2fa02fb92058300b3ff3c0585fff4fd04ff270630fb1004b8ff6dfcfb0016fe75013cff590602fca1fdf50331063603b2fe2c065dfb8e047704ab04bc016f00daf9a7fb570272032c03aff9090635fc6602bf02e4fcd7fdabfd6203c3ffdb05b10235fdeaf946fa4c0113ff64fbf5036afe1cfbee04f0fad40002fd1f0035031e0593fdff01b2ff6afb0f050a00d0fca1fcedfbe7ff5605300476019c019c05d503d8fdcffb6eff78ff62fb1c01cff9dbf9a5fb1f05ab015f00660532fd49fba5fd780560fb8f05a10339ff74fafbfb1bfeeafb7100faf9af026f04bb0334fa0500e702080393fdb302a101be0118035104b0fed1044606e1f97b05f2fc06fd04050bfb7805d6fe68fd0f0466022d06c602ccff48fb890419ff9cf94efa36fe9d013f0598fe760114fbd905210262016b016efae8fe52fcf3fafffe10febdfc27004cfd260288ff7aff04011dfed8011200530635fdcbfd88044dfe25ffe1018efe89013efc23030e011a00a9fcd8fd2e06ba00540002fef8feb4fc08fb54fcff03befa16fe440313016cfc850542064205d9fd1d012701f20301fa7afb170509fd450213fad5000aff24fa60fdc1fdc703360001011d05c70309025a0570fa470576ff3d01b2044e00dafc5406b8fc5a03030072ff39fd68034203acfcf8028a0338fe59fbc605b30512029efaf7fc13fb3bfbd20054051bfc3dfc68fe93fda600af01c0028bfe2a00530628fe55002f00d7fa72ff6104ad0249fe8e03c5046f05a9faeefc15fa0200c6044b008dfdfbf99a037706f9028003d5fef6ff8dfdd6008a05c50307052102f9029d034dfb82043d008204bdfdf1fb9bffe7fb38fca90140fac2037dffe9fdfbfd06038afb0dfab3fe15041704260194fda4010efbdd0335fda205b1fb68063cff4e0556068b026cfec002ec009b0121fedf0346fb2300e9fe61fb62fee8ff020534003906c201ff014b01e0fa5e02e8f96ffa81fd660187f96efbb1fd88fa76ff88fc2201d305af057c0552fccdfb8e032d021efe22032000c80589fb81fc330505027d03f9f9
tv_sk = 0xd6eccd635a4f19d80256bc9ca3c23deb783e2e16937ea151e136648db4cfa173c618552b57221ce3e43244d078f5c77a47b1a27b23bc7afc2b0a7991cf5a0a8e712cbd9c2f41250a6beb7cac3bc0e42bb446f3511f8a369b6082ba4477305ccaad9864bc3a4a15a6495644368028a4597ba78cb27a86e64333890f2783a8202a3fa018b100d1cbc49622e16a818a681d242a964ff8859b637b59a047f40cccd5d66770c08fb2b2c2eb538c6cd230b792448ee4acbebbc7ff57a798b296b596c858e85760f96e8eb0cac1380cfa20024d4aaa56c48031e4767fc544d982a72d135f56c24d5e157fdae24010c3b8a6c26a2f8713e82711f138906b020d8ef4a2676b1621fb38c9565512259c6d9ca54f64cf5f4b0860eb016caca6007db79e5890d9da874bf30bc53bba3de17ecf48c52dd028e92bb4edd75ec1b952fed596e1bb1507b3644f956ed4e8c352b61edc740fcee65cd907552562a31bb6898f0c17bcf894537b94d6c18f270a9b8b760a5be29ba4e61f9a0873459351174330c7a863b6d788c4895bb62058b8d5982fe525f88744bfa87f3bf223a967674d9601f22c022a149bdfc45bee5589a802996876471c36ab6fa31eec30b4324aa5a03cb29f93738e7519b1eb39b69b7092a9590fca8789978a61511df5ab7f38804255625151034e75244c7cf46a41e2a7447015c4109683714271fcb97fe8a1c2594f886161f5c36d022bc43c692ade56893b3341e63a01da870452fb7129cca4296a6fab49bc9e551ad40ab3067c679362c3e3c53191fa77e753ca69c092dad30032d665a237ce55f1044050c1000b8291c14b3fca500835711bc53df275996420892fac8a208683432c0854320d707985b35ba6aea0290f33108a29450edcc69613a00d1aa49a3304c5691eb4d6c3c0f32d4ab47e21184169b5a6e9fa89424cbfc49812304479d4411574320b45a10f21a352f412c4ae4305a09a801d8a6e211623c3207a3d893e98cc18709689f040561845cca42c154a2b04c912c39dc4831e14421fa2a9dbc322cc742aa78c8f1b7c3dac75bc596c8697d96d1af67365b621c6e762
tv_pk = 0x5fc44b99d7584f38cd28360cc5625a905b96af12930ed5b5fe2a82fc5aa7dc4b829fe37635f13f5af2a6d3081dad878785698a0aa914374c4e43b89f094a7892aa149a38b49c06a068d829a8d249e753a375d097a0f162e6c3a4dfe8c79761410c605ed3899a3fc44378e14f28879e8f148077e6bc3bb2ae56178c491611bf6aaf5f9a9cb9b5659223007940bcd6f8a23280a56015330e8577259587b12606f4c937ea13606cb3bb046066ad294261e2b22022bcc74678a5520570d88e4ceb42692631e7e3711c4b2fd5347f0328598340cb3c65c8f55ac02716831094cb6eb90f175b173d9c650329aaf513633633bb2ce6858e7447abc41b6fb06da8782572c332b09660366926bf529ed8caaa6243ccdb152b36ba6e47c714145c86f5b3b61de84ef1470d03fa0135e35194fa1fb3bc860fa500d1299aee88ce56054376c1199c553dd90a8d6f9cc763c811d0c66da6f851abf1056635a34a68aa7815868f153a3a5c77fcc8b1eb1807fbf62a6fb43b355700e78230943a2ba1e11b181345b11b4d46266e7b359f074a500c8857d79ba60f64262d662ccd9c8489a4c19df67437db193f95b9765181d9152262b1166f97be53497f001cb1be79024d6a2289bcc704e1b1d821015366a3cc8a484e6bc2e1f1b889f19323e3101aa09ad9ea62ba4005039bbfb5998055f93fbf77b14433116d5958422654dada1127213f02b78717a5a0454271d5b0c02517a6c27a3c3610101d753c09a25571775477dc13b2e404db4965b9a9350330c73a8a3642d39af8a23839ab85c6355b12f279f849813c280d54c5913e99b6946a0aaf012c8cab025396b255f002d837c761d42a4aeb38c5f456aaf79e162700c6b4048eca6f9a7367f90238d67bcf8e6a0d8a553c071522f9d2394e28483d2048be2a8f9c8c8e39991a41273c7eacaefc6a308be870b45b41176412954a1a0fd83d362a5ab288663dec5456b6286d0b2cecb01922fb3d473802ea2b86639bce02450339261cffb114e1e725e90677826a1688f686b29a78779c9822315dafc55753e98c8ed3221f2b3220805c8a28983355207da36fb72f9bc85c0a13b9d041586fd583feb12afd5a402dd33b43543f5fa4eb436c8d

tv_z = 0x3e2a2ea6c9c476fc4937b013c993a793d6c0ab9960695ba838f649da539ca3d0
tv_cca_sk = 0xd6eccd635a4f19d80256bc9ca3c23deb783e2e16937ea151e136648db4cfa173c618552b57221ce3e43244d078f5c77a47b1a27b23bc7afc2b0a7991cf5a0a8e712cbd9c2f41250a6beb7cac3bc0e42bb446f3511f8a369b6082ba4477305ccaad9864bc3a4a15a6495644368028a4597ba78cb27a86e64333890f2783a8202a3fa018b100d1cbc49622e16a818a681d242a964ff8859b637b59a047f40cccd5d66770c08fb2b2c2eb538c6cd230b792448ee4acbebbc7ff57a798b296b596c858e85760f96e8eb0cac1380cfa20024d4aaa56c48031e4767fc544d982a72d135f56c24d5e157fdae24010c3b8a6c26a2f8713e82711f138906b020d8ef4a2676b1621fb38c9565512259c6d9ca54f64cf5f4b0860eb016caca6007db79e5890d9da874bf30bc53bba3de17ecf48c52dd028e92bb4edd75ec1b952fed596e1bb1507b3644f956ed4e8c352b61edc740fcee65cd907552562a31bb6898f0c17bcf894537b94d6c18f270a9b8b760a5be29ba4e61f9a0873459351174330c7a863b6d788c4895bb62058b8d5982fe525f88744bfa87f3bf223a967674d9601f22c022a149bdfc45bee5589a802996876471c36ab6fa31eec30b4324aa5a03cb29f93738e7519b1eb39b69b7092a9590fca8789978a61511df5ab7f38804255625151034e75244c7cf46a41e2a7447015c4109683714271fcb97fe8a1c2594f886161f5c36d022bc43c692ade56893b3341e63a01da870452fb7129cca4296a6fab49bc9e551ad40ab3067c679362c3e3c53191fa77e753ca69c092dad30032d665a237ce55f1044050c1000b8291c14b3fca500835711bc53df275996420892fac8a208683432c0854320d707985b35ba6aea0290f33108a29450edcc69613a00d1aa49a3304c5691eb4d6c3c0f32d4ab47e21184169b5a6e9fa89424cbfc49812304479d4411574320b45a10f21a352f412c4ae4305a09a801d8a6e211623c3207a3d893e98cc18709689f040561845cca42c154a2b04c912c39dc4831e14421fa2a9dbc322cc742aa78c8f1b7c3dac75bc596c8697d96d1af67365b621c6e7625fc44b99d7584f38cd28360cc5625a905b96af12930ed5b5fe2a82fc5aa7dc4b829fe37635f13f5af2a6d3081dad878785698a0aa914374c4e43b89f094a7892aa149a38b49c06a068d829a8d249e753a375d097a0f162e6c3a4dfe8c79761410c605ed3899a3fc44378e14f28879e8f148077e6bc3bb2ae56178c491611bf6aaf5f9a9cb9b5659223007940bcd6f8a23280a56015330e8577259587b12606f4c937ea13606cb3bb046066ad294261e2b22022bcc74678a5520570d88e4ceb42692631e7e3711c4b2fd5347f0328598340cb3c65c8f55ac02716831094cb6eb90f175b173d9c650329aaf513633633bb2ce6858e7447abc41b6fb06da8782572c332b09660366926bf529ed8caaa6243ccdb152b36ba6e47c714145c86f5b3b61de84ef1470d03fa0135e35194fa1fb3bc860fa500d1299aee88ce56054376c1199c553dd90a8d6f9cc763c811d0c66da6f851abf1056635a34a68aa7815868f153a3a5c77fcc8b1eb1807fbf62a6fb43b355700e78230943a2ba1e11b181345b11b4d46266e7b359f074a500c8857d79ba60f64262d662ccd9c8489a4c19df67437db193f95b9765181d9152262b1166f97be53497f001cb1be79024d6a2289bcc704e1b1d821015366a3cc8a484e6bc2e1f1b889f19323e3101aa09ad9ea62ba4005039bbfb5998055f93fbf77b14433116d5958422654dada1127213f02b78717a5a0454271d5b0c02517a6c27a3c3610101d753c09a25571775477dc13b2e404db4965b9a9350330c73a8a3642d39af8a23839ab85c6355b12f279f849813c280d54c5913e99b6946a0aaf012c8cab025396b255f002d837c761d42a4aeb38c5f456aaf79e162700c6b4048eca6f9a7367f90238d67bcf8e6a0d8a553c071522f9d2394e28483d2048be2a8f9c8c8e39991a41273c7eacaefc6a308be870b45b41176412954a1a0fd83d362a5ab288663dec5456b6286d0b2cecb01922fb3d473802ea2b86639bce02450339261cffb114e1e725e90677826a1688f686b29a78779c9822315dafc55753e98c8ed3221f2b3220805c8a28983355207da36fb72f9bc85c0a13b9d041586fd583feb12afd5a402dd33b43543f5fa4eb436c8d23497b31279a8b715f912f30a181666270913bbd72598eb9cd65a6da680f5c6b3e2a2ea6c9c476fc4937b013c993a793d6c0ab9960695ba838f649da539ca3d0

tv_enc_hashed_m = 0x0badf4fba64b5e4d59898d998d822f846aa1271f250eaff7554d53894c822d38
tv_enc_coin = 0xd1821c3f6bc4fa17e3f49e53560321f09418559be03cc09a28fdc985d5982995
tv_enc_t_ = 0x5f04bc0499078d054f08d30c2806c300c502a605900b6509af0231090e055d0bfe0a2208fc0a750adc0b24089f036e073501ff035a026f0ad308d001ad0778088509a6080a094a01370ce4044308fb09090a8407920a4a019a08430b9c06000a68089d02a8029d04e703350a75007d09a0012f06e6034c0adf087e0c970116040c00e605d309a8093f043c047801fe042807e8098f0401087706ce0b3b02eb0a5607c10849061101bf0af60a5f0ac909b9055b06920302007900c40bd6082f0a3200580a600531030e05780725057908b1066200f4097c03ea0301066c03bb0b04006606ad09220461022e0b2002c20bc7068407a50255007008ed084c0b2e0469061203e7031e071c0bf402d504f307030892058300b40c3c05860cf50a050c270631081004b90c6e09fb00170b75013d0c59060309a20af50331063603b30b2c065e088e047704ab04bc016f00db06a808570272032c03b006090636096602bf02e509d80aac0a6203c40cdb05b102360aeb0647074c01140c6508f5036b0b1d08ee04f107d400030a1f0035031e05940aff01b30c6b080f050a00d109a209ee08e80c5605300476019c019c05d503d90ad0086f0c790c63081c01d006dc06a6081f05ab015f006605330a4a08a60a780561088f05a1033a0c7507fc081c0beb087100fb06af026f04bb0335070500e7020803940ab302a101be0118035104b10bd1044606e2067b05f309070a04050c087805d70b690a0f0466022d06c602cd0c490889041a0c9d064f07370b9d013f05990b76011508d905210262016b016f07e90b5309f407000c110bbe0927004d0a2602890c7b0c04011e0bd80112005306360acc0a88044e0b260ce1018f0b89013f0923030e011a00aa09d90a2e06ba005400030bf90bb50909085509ff03bf07170b440313016d09850542064205da0a1d012701f20302077b0817050a0a45021407d5000b0c2507610ac20ac703360001011d05c70309025a0571074705770c3d01b2044e00db095406b9095a030300730c3a0a68034203ad09f8028a03390b5a08c605b30512029f07f80914083c08d20054051c093e09690b940aa600af01c0028c0b2a005306290b55002f00d807730c6104ad024a0b8e03c5046f05aa07ef0916070200c6044b008e0afc069a037706f9028003d60bf70c8e0ad6008a05c50307052102f9029d034e0882043d008204be0af2089c0ce8083909a9014107c2037e0cea0afc0a06038b080e07b40b150417042601950aa4010f08dd03360aa205b20868063d0c4e0556068b026d0bc002ec009b01220bdf0347082300ea0b6208630be90c020534003906c201ff014b01e1075e02e9067007820a660188066f08b20a8907770c89092201d305af057c055309ce088e032d021f0b22032000c8058a088209330505027d03fa06
tv_enc_rho = 0xb72f9bc85c0a13b9d041586fd583feb12afd5a402dd33b43543f5fa4eb436c8d
tv_enc_At = 0xcf02f1089309d602e3062805680b6802f6070a0318027c00ca0af4027906ec07ca02a70287031109fc020e0bc302d808d30c8306a40747057b055d007b024108d7093007190b6e0c220abd0a3d055e09770180084d05af019e0cc10ce6024408e80aa604ca02e4029f069508500b30089909c20954000e03db07f002cf0ba70c2d084e073d0c7c08490cbf04ad03f00c080bbc0c500728036905a40078008d0aa408dd0b58015909d0033e01e80cb10a9a0336059405a205d408ba009b02e5056b001a09fc0bb404100190029c058b0b86045301c80aef0b05053a00c708c707ed07940b6b0b31090f01b300d1060904790ca10302035c036808890a47003f097b054205550ce60a47091f08b9059a02d80bd009a10b3203340c79047802020432039a056b080408190a540a75095e0a7800b502820a88063c084e060f076804b40acd0b56094e0554077c09100aa7082c0b410695058307ab0a7803330a66062302e0059109b9031f043f05ee018709fd018b00aa056e06d9026e072806da0a4a0aa509f90aa50790079606ce03a40c57071009a500c70b2d04c902890bf90b10061f075003e305ed0bc7018c05c2023003c700fb07e8037d0636039203750a9008700ac809a105c9023b0370081f07dd06df08c40ad807bb07f1043f0401008a06f4023f04160c1b01da085608cf05070638024f0b110abe006101a502150241015b09a009580bcc003a01a605820042033106490b810b5207a9014e0bd407860b15049a06770b7c08930a5f0976093d0812029403810c2503b50ae2047e02f200e206d209310bd00372013c08b20636043301d103f30b8004e806a0038402d801a40ac10be50c82080b06ce06ce0741079709050a27000c0899079509490183004806960a7902200af301b308f905bd08670b00058705b7001b0573047904ff07fa0b9a0484020808a00ce9032003800b0001d10a660cde04a904010bc704d809f504e704bc0b8400ad035b06fe01b8037e060e060b04ca04e302970c58014d05bf09400ad909f7095f0a5d0072011e00350156014b0aa80632098e07ee0057019e081a082508c10c3309b90516049d050809d70c6b02ae06d50ca001d901e400440ca505a40258077901bc0cd7083e067f0aae016107540bb2056d03f00af60799080b0255061806f800070a0806b804420c7b09f303c906380229080e0cc40b91086105cd075b06a3083a06430b2d0a26087d0a0d0b3e01120632054f0b6d00490c66061302df0bed002108ae03c900a003010048054a09f4073401b6060b078300b007ca0bfa0b2801b70bf403b9063005b80c97059608c001e7017e0a19060c0102062c0904040a07ed0c2504e203c5073c00300ba90043013d02be0bc105cb0aa60c4500570028085609850ad00452058003530125039800e90a3c0263064406ae01fa0bd4049507010cbb035a007f01710331065804d901e4039a0b6f0024051c0b8d01ff0c4505810cd506d9027807ad0a6a0aa209290a7604cb026703570066006204c208620039059206cb05ae03150bb502b002a4064d01860012027504bf041c04fc0c4101c8011b072903f50291079d0bfb0bc703220a600cdd08b5014a0c520b99078a0c84074d07380adb0b910c10091a038302a70819014d071f02e8004f07b0089700db00a00445007908e0045104c205d601c800e104ca09350507008a09910baf09b1044f07a8046f085a0a23045902bf0532066703ee01d703fa0b2c0c4e03b70bbb0aaf0cd30ab607d008d500b30c67086a09330b780a9d044c071b06d50bea07fd051a048d06d00a52015404df08e4081706d304150aed04d707d400470c6e0aa60b3e07ab023f0ab00b350c93066e0a5f013a06d30afc02590a2108380c3b04b3005304cc09e10b07021402d00937032b010b00c3064507be05c8087900780b63031b0c0c0825050d0c7102cd09fd059f0785092004930310096904450827034b07e6091c0c630bd603610ae704a204fc01100a19038b082b01a9057a059b06e303300bcc02f001280b91016d08eb005507c8095e049e0b8400b30bdc0053077c0b6d0219054e02da0bfb047703d708dc02440aab02c405260a310a3c07be002c0b8902b106cd0ce106ee076c0a36087d04e0001f025a002308100cd30a68091c027d02230a0e0b070a5706830487042904db08a3094e03440cf8031c04cc0b660c76027107380b840658098c036c0cbf0b2601410953088608b108a3049d038706cc03090a8d085501f90be50a1300e7014909f801c1003800a105a2060e0b7309da04e601d80a6c0673023d084e01a30ac101950c6a062600dd0a0e086f074e003d065b05aa0c950983027b04e40975030c08fa007c0a7307e301dc019309040ab808d707d60aec0a7307f20bad0b88078e08de08f806910bf50c440a900a590aec04ed060901810c4406bc0a9f03930779055d093805700a00038c0a9800540c88074b00eb040a09ea087502f30293029d0cef093709620c7904910b4c008300250216046401db08310a9f05f206510684056d09d4017c0b610116006304cc037a07d9074c050a0aa6054f0c39042704730c99002804260b8c088e02fc0bf8011d0b600ab60626064409fb0b73089207b509a307b3049907210cc80a790bfc08f109310ae9013902e703f10cd20089079e0c8203560b1d058e00c8051901f103640b6a0bca000b054c04f109240210029b0c3009080b9c0ba00aae04b00b9e09a9013d00a9001600aa070d05cf051f07460224042506e2084e0ace04e402c204d2019b042602960380034d0329032f0c700c3604b409760c010c5e04bf07a209fe07970355084702b60b3a058006b7034408
tv_enc_y = 0xffff0000fefffefffeff00000000000000000000020001000000ffff0200ffff0100010001000000ffff00000000000001000000fdff0000ffff00000100feff0200010001000300ffff01000100ffff0100ffffffff0100020000000100ffff00000000ffff00000000ffff000000000100ffff0200010000000000000001000000020001000000ffffffff000000000100feff010002000100ffffffff01000200feff0100ffff01000100feff010000000100fffffeff00000000fffffefffeff0100ffffffffffff0000ffff0000feffffffffff01000100feff000000000100fdff020000000000ffffffffffff0200ffff01000200feff0000fdfffefffffffeff0000020000000000fdff030000000000ffff010001000000fffffeffffffffff00000200fffffffffdff010001000100ffff0000020000000000feffffff000000000000010001000000feff0100feffffff0000ffffffff0100ffff01000100ffff0200ffff020000000000feff0200010001000100020000000200ffff02000100010000000200020001000000020001000200000001000200feff0000010002000100000000000300fefffefffffffffffefffefffeffffff0200ffff0200ffff01000000ffff0000ffff00000100000000000000ffff0000000001000200000001000200feffffff010001000000ffff0100ffffffffffffffff00000200010000000000ffff0200feff02000000fffffeff0100010001000300ffffffffffff0100010001000000feff000001000100feff00000100ffff010000000000ffff0100feffffffffff00000100000001000000000003000100010000000000feffffff0200feff00000000ffff010000000100fffffeff0000feff000000000000feff0100010001000200feff01000100fdff0200010002000000feff0100000000000100ffff0000000000000000ffff0100feff010001000200ffffffffffffffff0000ffff01000000ffffffff000001000100feff0200ffff01000000feff0000ffff01000000030000000100fdff0200000000000100ffff0000ffff01000100010001000200ffff010000000000ffff02000000ffff0100feff0000feff0100ffffffff01000100fdff010001000200020000000000feffffff00000000feff010001000000ffffffff0000ffff01000100020002000000000000000200ffff010001000000feff03000100feff000001000000ffff0000000000000100020000000100fffffdff0100ffff01000100feff0100fffffefffffffeffffff010001000000ffffffffffff00000100fdff0100ffff01000100ffff0100ffffffff0200feffffff010002000100feff010002000100fffffefffeff00000100fefffeffffffffff0100ffff0000ffff02000100ffff02000100
tv_enc_e1 = 0x0000ffffffff010001000100ffff000000000000000000000000ffff0000ffff0100ffff000000000000feff02000100feffffffffff00000000ffff00000100ffff00000200ffff000001000000ffff000000000100ffffffff00000000ffffffff0100000000000100feffffffffff0200ffff0100ffffffffffffffffffff0000000000000100ffff01000100feff02000100ffff0100feff00000100010000000000ffff0200000001000100ffff01000000ffff000000000200010000000100000000000100000000000100feff000000000000ffff0000feff000000000100ffff0100020001000200000000000200ffff01000000feff0000feffffff0100000000000000000001000000010000000000010001000000feff0000010000000100ffff010000000000010000000100ffff0100ffff0000ffffffff01000200ffffffff00000000000000000000ffff000000000000ffff000000000000010000000000feff020001000100020001000000ffff0100ffff0000010000000000ffffffff0000000000000000000000000000ffffffff0000000000000100000000000000010000000000fffffffffffffffffeffffff000001000000ffff02000200ffff00000000000000000100ffff000000000000feff01000100fffffffffeffffff02000100feff0200010000000000ffff0100000002000000010000000000feff00000000ffffffffffff0000ffff00000000000000000200000000000000000000000000000000000100000000000200ffff0100000001000000ffff000001000200ffff010001000100000000000100ffff0000ffff010001000100ffffffff010000000100010002000100010001000000ffff01000000010001000000ffffffffffff0000010000000100ffff01000100010001000000000001000000ffff0000ffff000001000000ffff00000000ffff00000000010000000100feff00000000020000000100ffffffff01000000ffff0100ffff00000100ffff0000ffff00000000ffff0000ffff0000ffff0000ffff0100ffff010001000000ffffffff010001000000feff01000000000001000000ffff0000010001000200feff010000000000000000000000000002000100020000000100ffff0000ffff000000000000fffffeff000000000100000002000100010002000100ffffffffffff0100010000000000ffff0100010000000100020000000000feffffffffff0100000001000000ffffffff01000100010001000000feff020000000000ffff000001000100000001000200000001000200fffffeff0100000002000000ffff000000000100020001000100ffff0000000000000000ffff00000100ffff01000100ffff0000010000000100ffff01000000000001000100000001000200
tv_enc_e2 = 0x0100010002000000ffff0000000002000100000000000100ffff0200010000000000ffff000000000100ffff000000000000ffff0100ffff02000000fefffeff00000000ffff010001000100ffffffff01000100020001000100000002000000ffff0000fffffffffeff0000ffffffff0000ffff000000000200000000000000feffffffffff0000000001000100ffffffff0000ffff010001000100ffff0100fffffeffffff0000feffffffffffffff0000feff01000100ffffffff0000feff0000ffff0000ffff02000200ffff0000ffff00000000fffffeff0000ffff0100010000000000ffff0000ffff000000000100ffff0000ffff00000000000000000000000000000100ffffffff0200fffffffffffffeff01000000ffffffff00000000000001000000ffffffff0100ffffffff0000010001000000ffffffff01000200feff00000000ffff000000000000feffffff0100ffff00000000000000000000ffff000002000100feff0200000000000100feffffff010000000000ffff0000feffffff010001000000ffff0000ffff0100feffffff0000000001000000000000000000000001000000feff01000000feff01000200000001000000000000000000ffff01000200000002000000ffffffff0000000000000000000000000000ffff0000feffffff00000000feffffff010001000100ffff020001000100
tv_enc_y_ = 0x020032013efb22026d0374fc1c0258fdf9f9a500190234005f05b404ce0075fc39ff2802d7fbfafe49ffda02bb04e4faf605ab0516006ffe7e03df008300eff9e9fa18fd9c00fcfc35fdd7fdc2005ffa9af9f7001fffb0fd4b011c0284fc5cfde3f9a0004e06d403eafcf6044603de03c8fc22fb26fa96fb20015cfa33fb00020f03e902d7ff3cfc4206e3fadb03a6fb00fe8100f002f2030d065d04aafa81fcfc0414fc24fc3c0668008afbc2001ffefb022ffad3007901950570065203e7fb96fd8b035105e1fb45fbe305acfb8a0058fc3c06510302048fff5d000affc7fa290266fce102ad00d605f0018d045cfab0f92a05befb15fcee02b00247fc92011102d403bffaee0114055cfec7ffd3046dfa09032ffcd4fbfbfb46fc8e015ffc0904c40547fac20584045a000cfc9bff8605850062ffe9037801250387ff25003403d7013cfcfc018c03d6fc1b04e3fc95fe89fee201df0290ff780617038af9450359fb00fd93fb92fd3405cd0119fdb804f6fac7fe3cfbacfda804ee043ffab300310524fb67053002e80521009f043e05c6f94405fe05760396fd5a06d9002cfca103b6f9ad026bff3b0612ff030644fc0ffeb0fc4bfac5029bfe3dfd570651fc32ffeffcbdf935fc7601ef05fbfef9019203d0fc5e020f05590526051201960583ff5403240576fa9af91301f30187fdacfd84febff955fba2f953052c0505fe3c02520585fb42002bfca0fb1afee2f97e00cdfa8404ba05050193fc47fa4802affbbe0399fbf502d305860150fafcfc1efd130505ffb7ff8703a4fa23ff0304d4fdd405a3fd91fc66fc67fd6600d600770443068703c800a0024b05f3046700befd70fbb302a502bcfebffd5f056bfef1ffd801efffe500c1028301a3fae1fbbffc9dff0efb95057dfa3206e805e2fc07024afde1fd4001eefc52006f0148fd2304c9f9dcf911041505adf9c3025cff0c036dfe660319fde5ffd3fbf6fb5efdd0fb170421009d01510124fb11fee503f403befe50fee0036efe73fea6ff6303acff9501ee01ad05d2fed6007800e6ffc0fefd0147fef5006f06faff90f958fd3e04b6f97cfe7701d2fd42ffeb04eaf92bfa780477fb2b06ec00fa003c019bfbac03b0fb7dfb110179fde4034f02e7fac0fb9a0117ff52fc070250fd87fa7806ed019a05d100a3fb75fc6202ebfdb600bbfee3fed6fda2fba6ff4300d002acfc98037c026600b6fda90592fb1ffe0e05e9f974fcf5fe0f010a03b802e4fa3efc1cff110418fa92fb48061402800564fa1bfbd000b2f93705cefb27054afdfff9cbfe2c02ea009bfcbc0041fdf2045bfd75fe90fb49005c007a01330261fa2dfb56ff0604b4fabafeef0084f9f7ff730247fa38fcc90196fc30068efb42fd9ff98ffdb1fa64fcbe00d8fb3dff5dfc3ffea9fde701a40504fe870540030306
tv_enc_Aty = 0xf401a3f9b3044f06f104f1fecafea2024505b5fcfa02c405f8ff95000ffe81f9d6fcf3fcfffc18fb76fe6afeb60133ff420187f912fee1040605f8f901002efb9601c303df048fff9c02f802890203fb80fa2904fef948fc0800b6fb24fb72fb9d035efe3f0582fce5ff510676fd08fe3efaa8012bfa5600d6003a008ffcf1ff78ffe6f9f5059efcc7fb890521061a038b013b05f50039050dfb7fff330592f938fcaa028002820285f92e01e9fc7905d70253fe88fa35031c05aa059dfc480026faa2008dfcd101f50042064ffb1701b2fbbdff9d021cff7b0491fe75024dfbed0206fd5d0603fd73049105d904dc01b7fa0a04ed029f048efa6e03dc04390036016006dbfc99fcea0411fe07fa94fd3c065e04e004a6ff0b059dfb08fe2dfb7d0413047c05acfe7a06010482fe29fb0cfeaf02e903c1053a0575ff70fba7fa930003022806c8ff9400d30127ffe400d4f904fc0206cb0303046e02f00424037004000594fba6fb5afe7006edfb8bfafb01e3ff23fbbd03f1f9410163007f06ad012e0258fa8eff6e00580111fb46fd9302a3facdffccfd1efe8efc98029e05a5036ffba0017900b1fc7bfd39fd6901ed026ffeec05e604aa0237033f045e06bd005b042c0646fbb30007fb580456026e0463fc77fa4505f3f9fcfe370251fd1bfdf6fc2004c502d3ff6f012d013dfaf50311fa93faab02e700f3024efb400127041ffe42ffcc0287fe9b00f1fc08feda03b7ffa7fab102f8f9bbfcf4febafdc4fc85f919fee8ff6dfc09fce10371feed0066fd35037ffd7effba0528fd6605350674fb67065704fd03350310054c039cfb2dfb46015bfe220036fa6efe9302dd04440480016ffe7bfb60ff9cfd26ff9104e4fbbc0331fe3500ef0478fa350311fb6405940066fc87fa0103a602c8ff4101db04a1fe82faaa02a2f9d6f9cafd07fdaf013404c70025fc6306be0386fbb1fcd20193fc6e01c40435031d038cfa4905aefa4bfe1efc0efbbefa72fcc6fbc20526fa48049500d1fbb4fa2f049e017905c0037ffb67fbb5ff69ff02ffcc0264fc8603510627039303e800b5053afb0cff6a05d005dffbd8032504d9fd300028fb89fc3805d0fec700bcf953fff70555fc80f9f9fd01feb0ff1bfb9bfacdfb6d0649031704c8ff8bfc2cfa880072fa68ffeffcc7fc7ffc3ffe43fa20fd4e01c6f982ff7d02750686035cfbd5fd59fc14fc75fac9fc9e02d8fb4bfa80ff6302cb0227fcb7fda5ffde044d022605a0fc88052b03dafed4ffdeff4d05e3fed5fcf5023004f0050801dc02920361fc01039c01b7011b0507fc3d040c0296fb270070fdf90357fe0bfdc703e90163ffccfa59ff34003a01aefa8d00fd00f0fa03fc13ff8bfcb30295f989fe74fc20051503d5038803e1fddd032f009c05fa0125fb15fd2e05c0ff6cfa3003effdacfc5603
tv_enc_u = 0x0afc87fe10fa13068bffeafbf6f98402c6fd9efce70410fd7ffc7a02fc02f8fb980321fc89fb2ffb1dfad2fa6d02840303fde6013202b9004bfc6502f405350376fa2c00c7f9c10365fa5b008105b001a905ea036903c704a1fda1fa0f02ddfdf70080027dfcd404a4fd2f0122feec00d3fd6bfcaaf9a90447fc8efa53fab5fe27036bfebafc3ffb2f0561fd780063fbedfa0a0352fc88fa5405aa0026fb160382023efb630166fcfffb070698f9ceffacfa0b0344fa1403c004b1036dfc4efd5bffd601f5f94a0335ffa50457fde8fa600572015605cf049302d20085fdc1fc4ffb40fc66feaf033500e0fb1b0251fab2ff32ffec037c036dfa6502f902ee03c7019bff2bff01fb5dfb3b0229fb960597febc05570413fa6cffbefffafe8003e1040f03f1fdb0fa13058400c8fa2d03cc0097fbfcfa8303e6fbd101b4fbf201f4fd4303e1028dfdf604a4fc18031b03680171050ffe10fcabf92b0368fd9c05fc012afd12062404c8fc1cfec1fe3305f3fa80fc440106ffef019afd6a06d90589ff8f031e04a5fb6afbdff9610665fd8d027e04f2ff1dfbd9f95f041d037ffb4802cf019ffb5602c80275fef0fbbcfdd304bcfa970158ff5606b2ff6a021f03e10102fb85ff96ffcbfdd0051a00affe370489fc1605d2fa6efbb4033504e80306ff5cfaf6fc0f04d7f9e0f942036903da03b7fb4d04880391fa04ff92fe44ff50fce30009fb2405920029fa7c0085057b04fafaaffa80013f042704d404d3fea105f70447022b06fa0416fcf700f9fb4604d104a5053302befa4bfbaefb92fd35fc2002edfd6afc3d0674fd2f068bf9680143017a0320fe10fdd3feb1fce901410289fe480671048fff1d06260662fa6ffd35fce70460015bfda20395fcfefe1cfa58fdf1022e00680038fdca004efdb7fc34046d0396ff930564fefdfaad02e8fa92021d04eb02a1fe4901da0581faf3017306a8ff9df95dfd79fd59013e06bbfe19fe3505060324fe2afb1301f5008b02bbfe29fe0c026a012ffecf040003490313051bfb7dff65fb81054501b8030a0650fa9600260267023a016bfbf0f9d8021f00ecff29048b038bfc4900590562040902d1fc34fee9ff9bfcf6035afaa3059ffbccfa2d023afbec01a10343ff1f0497050404620658fac2014303eb0230fbb5f901fe35020103effb84ffc8fb34fafbf93601e202a4fa0303cafe4101e8ff74056afdd3013efcc301b50565fdd9fff205fdfdaa01baf9e9f9f7f907014bfc07fd7202ed00dbfd42fb05039e036c058e019000f30274fb76fef4fff5fc7804230480fb9d0418043a0104fd40fe750238ffdbfa0cfab6f9abfac2fbdefb63fe64023306b705dd05d7fe3f0066fb3dfb5cfc3a042a043406e2004b02d700e3018405fb04a1057c030d05a5fe8bfe63fdcd0579fad1008b00fc001e068ef9
tv_enc_mu = 0x
tv_enc_v = 0x3effbb01cf0338fa55fac8f9f401d305e603b204db024bfd28fce4ff050245051efb9cfcf1025cfbad034a020f02160352068006f0015006cc04a2ffb8fe4bfa6b022102c9ff08fdc2fd4efccff997ff01051a06290171fda1fb460372ff9d04fc045701b304eefb5a02f70052051501aff9ce03b203bc004702f90036fb10fec50139057afc61042eff62fd33ffa8fe70fd70039800ad012c03b50207ffdc02cbfca8fac3ffdd0075fa280137febf012cff3605b4fc250683024300c1fa69ff250419022dfb58031105a8ff04fd7005a1f90602b103b4fa470150052804cffdc404390083fd4001c7fc2703d4fa41fa0f0273fd050350008dffc9f9a30328047f02c700cc0187f9fa00fc0026ff2bfb230161fbf2fe14fa29fb6efe8c0201ff16fefbf91f0362fbde027a0328023fff7d05aa05fffa5e038f03020602050afb1c06ccfae0f93005150133fe2c05da01a805d2fbc703defad805fdfcf502a9fbfa005dfe9cfba6fdb7fabdfb4dff93fcf6fc0a017e032ffa0cfe12fab8fadb019b052600cefc4c0101ff61ffe7fc3205990307fa18fd1c0208fcb3003b01db05a4fcb002910493fdc405e2016cfc8d02bffbfe026a03e2fc8c04010350fac0f90c011ffa500331fe5403b9fac5fedbfc3bfb5bfc96fe0905d3fc7900fdfb0a03defd04fdec01a7033afb29ffd9febf049105aefc5a05d6fcb8ff8a02bf014c00
tv_enc_c1 = 0xc832cea277dcfb4aa23151db2b58c6ec0eb3ceb01b3d0b6aa130a2f94b451557d24a0edcf6525d3f4c3a60214a4772105b21bed1d4105e4567290ad64c14b32e5f4677d17612559bdbe05bdb4e19a4e6f80ceeafa298c95c42a570bee36d94a4d120e83cc524da06b9c56e8760fc5cc2c3a33c768d742ecbcd4742e240c2bbf5f29ba7c941da5ecb04d133c08f662bb84810ec6a0a90e8075f934449f6a24e4d8c84effb9d93c232286e911367558bd2b3ff3a4580c5e3b59790a550a63e3f945a6745bd3ee26a265f0734cecf87dd4b4f3d6fb076b6b20de643b36e9c84ec9d5103afed796672b24bc6ec980c9d1f73db634454aa977668dfccc988c5ff9f1c62554fa7b438722a2edb180eacd37c85d907f3f3a1ef8b3d94dca9fdf7522b8700e64cbd0b199a9892b4144db3131931501b7a1850432fbd3a954554cafeb8f1de1a9167652dd068c26c61d1d9a51d4e1dc5d7e8bb1d368b798831cbc4b051edc55b2b6236ca6ad0d59ed2b5b9ebdd7c1e816f8c2111db198fbeaf25b134fe9e57dd87479e9136572b181b307b346fec30be8c8e032094ec03cbfd2ee5d0f7b7055ee7346f2a4394399497d1dc9399f0577e8230e7ac067b9cabad993b6e0f5ac512c870fe76286fc4bd173b0341f627f695c6464649dc01e9422abd8471e988e028a03f5217c16b4169598152f0dcf9d78bd390bc9d6ae62a885ee291f145e1c6d37d432a129039854238b62bed00ab3dad389af8c5385ab613fa18f9b7463324d82e12dcccf45327f6201282586214dc5a1c4c12572fea4e47abe9c1023a9a1ece3fc46019e5e95a428551b1ddc108bfe68a117229ebae81f3829e70ce953e81a58986db1452e819518b1095c886d86e12395679e33227d724102b38211e81
tv_enc_c2 = 0x2f95897265d40b62caa435438882069e33c0bdf886d14b6f26b61317581513ea625cdfef4d21344f9c10192e6f8c03fa354a067c289572d5062d4c9ad3048f54138211afa19feaf39ea444f3774a74a6a868e126b7a5c7b4e1dbb9cf1c949e2a072cff6c943c1b723cd6273c4bc4468991e4a4ceca6e1c4bcd42fa6fc7c73002
tv_enc_kr = 0x596937a0b939ce027d3050d768119a7c40945caacbabc6dd04b73300c49d7ab6d1821c3f6bc4fa17e3f49e53560321f09418559be03cc09a28fdc985d5982995
tv_enc_m = 0xbac5ba881dd35c59719670004692d675b83c98db6a0e55800bafeb7e70491bf4   ### Given
tv_enc_K = 0x8a627b20f82f8d9d72915148446d2aa1e2533cec93ecf99ff9d1c7c59c0a115b

tv_dec_rounded_u = 0x0b09880b100712068c0cea08f6068402c80aa009e704120a80097a02fc02fa0898032109890831081d07d3076d028503050ae4013202b9004c096602f505360378072e00c806c20367075b008005b001aa05e9036b03c604a10aa2070f02df0af70080027c09d304a40a2e01230bed00d50a6c09ab06a90448098e075407b50b26036b0bba0941082e05630a78006508ed070903520988075505a9002708160380023e0862016609010908069b06d00cac070c0344071303c004b2036f09500a5b0cd701f6064a03370ca6045a0ae9075f0573015505d0049402d300870ac10951084209670baf033400e0081c025107b30c340ced037b036e076602f902ed03c7019c0c2a0c03085e083c022a089605980bbd05580413076b0cc00cfa0b8103e0040f03f20ab20714058500c9072d03cd009908fd078503e708d101b608f101f60a4403e2028e0af704a30919031c0369016f05100b1109ab0629036a0a9d05fb012c0a12062404cb091d0bc20b3205f30780094501070cee019b0a6a06d705890c8e031d04a6086b08df066006670a8d027f04f40c1d08dc065e041c037f084902ce019f085602c802740bf108be0ad304bc079601580c5606b30c6a022003e1010308850c960ccb0ad1051a00af0b370489091405d3076f08b5033404e903070c5e07f8091004d806e20644036b03d903b9084e0488039207030c920b440c5209e4000a08250592002a077c0086057c04fa07af0780013e042704d304d30ba005f70446022c06fa041809f700fa084804d004a3053202bf074b08b008940a35091f02ef0a6c093c06740a2f068e06690142017b03200b120ad30bb009e8013f028b0b490672048f0c1c0625066407700a3509e7045f015d0aa2039609000c1d075a0af2022e006800390aca00500ab70934046e03960c9305640bfd07ae02e90791021d04ec02a20b4801db058107f1017306a90c9e065d0a7a0a59013f06bc0b190b35050603260b2a081401f4008a02bc0b2a0b0b026901300bd004ff024a0314051d087f0c650880054501b9030b0651079600250266023b016b08f206d8022100ed0c2a048b038d094800590562040802d109370bea0c9d09f6035a07a3059f08cc072c023b08eb01a203440c21049605030463065a07c1014403ec023108b506030b36020203f108850cca083707fc063501e202a5070203cc0b4201ea0c73056a0ad4013f09c401b405670ada0cf105ff0aaa01bb06e906f90607014c09080a7302ed00dc0a440806039f036c058d018f00f2027508780bf40cf5097804240482089c0417043b01050a400b7302370cdc070c07b806ac07c308e008640b63023206b705de05d90b3e0068083e085c093b042a043206e4004c02d700e4018305fa04a0057b030e05a50b8b0b630ace057b07d0008c00fe001f068e06
tv_dec_rounded_v = 0x310ca0011004510751078106a001b0051004e0044003910af1080000a001e0042108c10940032108100470027002400381068106a0018106e0040000610b5107700270020000c109910af1088106310ce0048106d000910af1084003310ce004e004a001e004f1087002d000b005d000810610041004d0007002d0002108610ba001e004c1091004310c910a310c610b910a4003d000a00140037002310c4003c10951070000d0005107d000610ba001310ce004c1098106700200002108310c1004700221084003e0040000c109b0058106a00110045107a001b0051004910ae0040000910aa001c1094003210851077002910a40030000310c8106400310047002d000a0018106d000d000310c2108d0002108310c51072108610b7002310c610b510740032108400340037002310cb005b005210840034003b005e0042108810621088106e004d000610be004a001b005f10810042108b005c1094003f108d000610bf108910a5107f108310cc109c109d00040035107610b51072108a001b0050000c109a001310c310cc109e00440035107c1097002f108d000a001b005c1097002e004910ab005a001c1097002f10840034003c109e004400351078106d00051074003610b40032108610bc1092108c109610be004c109d000f1084003910ac109a00140032108310c310ce004b005c109b005c10900007002a0010000
tv_dec_u_ = 0x4d0020fa9afad100dffcbdfe9b0437060afd13faba0144fa820392fc2d04380357fdb2047c0205fa60fd1304ffff8a05400312fc45ffa2fde3fbcafd5aff0106e4035a03abfb0a03c1fa47fd7cfa4fffb7011e04a5ffd5fb8afb70066afa750402fc69fab5fe6bfd54fb08011203ac05b6fcbc03fa015d05f2feeafbb7fe5001ddff1afb2d022ffecefbc702020534fd920411037ffd7afd0a03b8ffbdffe10150fa04000c053c06a40008068fff870257fdd0facdfa9dfc0afe8d011e052fff61fd4903d5fa3bfdf1fbb803ea023d059103fafff0fc240465fe1cfed905dcfce1faa0ff0c06e7000d024305edfae104adf91bfa5b069f05c90567fcce0066022cfed604bb0443fb840397fe3002270076030d04b3fef60357028901c2027a0552fa4b024ffc4dfd2b06c90234fb0d002ffd9b05860142fdab0511fe70fb47ffbb0300fc01fc97fa3c024203fbfa6b0151019500a9fbe4053301a2fefa006ffd22fda8fdfd0213003aff8b0455047402ff03befebb04ab01f8fd0e00a401b3fdfc016a0589fe74fe3c01b5fee5fd27fc6a05bffb5bff83020203a4f92f03f102b3feb3fe08036e064803550185002200abfa6effc1003400a6fc590654fea9f9dd027500aefb9201e704abfeff02cf002700c3fb220303ff8dfb4c011afe97ff490027036ffe35fe04044efd04fece03ad05a3006101520416fb1002500146025c032f03d5fd8cfbbc05ed0404fbc4fa9ffbe0f90f064f01d905b701350232ff2cfb850254045ffb36fb89039efff40531016e0275fcd0fe8d0370fa340364016005f5fe8a03e803ed01dcff87031102a9047afa64fcbbffa6fa2ffb140260fe1cfbc103e8008bf960fa970262facafb70ff0b0645fd9505b3f9df03d4faebfb6ffaa0fe3bffb4fef5fa38007403750693fc9bfbddffcd02ff0383fb6d063800910344039a0028064c0531fe56016f069bfbad026afc81fa9b0361fadefb53fb48fc700129fa0900affc210107fcdb03eeff4efe23fc9e00a10158fdbcfce605c7f9330584059b018602d0f928fba9ffa3048901500585fef4fea7fe8c04aafe0d0025022afe59ff3a00fc0517fd9dfb8504ab026cfc5901edfd8df913fc2dfcc2fcd5fb20fecb015e02f300870536fed4f9c40552fc72fb9a052afb9003fd020b05ba00c405a802fbfea0fd3dfb10067b06b1fefafabb04200671ffc904c0016f0206fd91fb42fa6e0042fe90fc8afd50031805b1f99402090557039c05f5fa4c035ffdd6ff3a0285fe63065202e003cdff42fc36061e05b20437fb310588fe30003bfada04b1ff81f9ff03fe055efae705d9027d0619fd5202c601b4fe86fa7900b8feeeff89fbbf00600128fb0dfb16fbd602e1ff41008400b80304029ffbe4fdc105b7fd53ff8801ebfc000255060d0568fac4fc86f9ecfd2903c4fd44fc
tv_dec_red_s = 0xd60cde0c630af50419082d00560ccb09a302dc03eb08e7032e0631097e011a05e10643068d04fb0ca103670c1805b5025702c201e3042e0344008d07f507ac0747012b0a7b03c20b7a0cbf020a091709cf0aa5008e01c702bd0cf9024105a2006b0bce07ac0b030ce40b420b46031f051f0a68039b002608ba047407300ca50cad084906bc0aa30415069a04560464038008420a590b770a8c02ab0786063e043309f8002703880a200af203a008110b0001bd0cc4062902e10a16088a08d601240a62094f085f089b03b60759007a04f40cc00cd5067d067000fc08b2022b0ceb03c5086c020d03b70249048e04ce0abe0b7b0cff07750a98026b09b506890c58087e056009ef068e00ab0cc108c300fa0022004d0aa40a56040c0831046e077f054c04d902780a2d03f1055602dc045e05f107da020e0410038c0ba602ac062f073801e8071201f10803096b02d0008e042f0a670b6601210b8f03c90655051205c2096d0c590a4f04f60c5f0b8400600b1e006c0c6a0a000d770b9e080509d90a7d084b03bf00c50ba30b3d01ee07cf08540c2d008d02e90b420bed07ed05c1092b05fe056d09e10b5b0107034b064f05e906d4083e0c5206eb01dc04f700ce06ce05d90750052502360a1b069b088f0c7001bc084f09530b4709d601fc08270ab0098b06a7005b02be09a406fe019a0830074503190517030403c7083a06b6078d08c409b805b6008205b8058d092f055e02f8074804bf08fa073b023f02a90776064d061900f20c22002a04b109df04bc05ee059508a8029009680677041c06b30a6f03ea01ec00430b320a540aa00c230b9f0339078e059701b10b9e03b60b090792099a050f0a7c088907a9086101d501f50bfa0738002804550216055103e0047504c2047c04af0641027e0a44005701c400610983012704710c9f0b7f081e0ac209f50488011606f503dc06020b420c3c09a602de0695083b031304e60a1300da074800520b1f07290c4c0a290af606ab09c40b9e05a501d40a300b060c77069302360ce3051c03910a7f07e703a50c69002c09da030d0032065d06a207e30c55014f004000150c000b20089101bc043f0a0c05080513071b05dc03f2059709640092082f0caa0820063808430c82005402d30070095708b30b650aae009a020f0303018a0952040e0c6d0c9603010a0d0a410a9a034300c509e601b4063d0cc003df024a04eb072108110469056b0ae90a9f08420cf40bc408290130049407d40154017402b3004501fa0021032a05f402410cae035400a00a09081d0ae80621063102c300a2073d09e803980c8c0170069908f00064051805c40ca40c52014a0b4200c902310c9d043c081e0421041f029a0adb032c02cc04a702a70cf8081b0cd703ac05c70b590c66089709dd061a063f0765061b02c6072e06
tv_dec_stu = 0xb20530fbed03a60026faabf95c01a70531fdb50465fc590327fc3206ce01d6fec9fac4fc65fc1dfb63fd73fb1afbc0fc0a00f5ff0502c9ff86fe5b062605e400710218fc4d0670fdc2fd82028df9f605e9feceff42010404c3fb7a031e0689048c0596fa48fe9002ddfb9a00d5fe2f012d002e0451fd6afa700219016801d1fd4afb30059dfcddfda9055cfd1a06c5fe51044903ad0094fb7e03f00229ffdffc8503d3fa52068ffaa4fa44013dfe6efbc205870596fc9aff36fc5f00c6fae105bffd2c02a901b7fc2205b3ff33fdd4fee2f96dfbd803c5fa3001a20539046d048dfe71066404adfac4fc04fda8fa3efae0012ffdebfc40006bff8bf97303f9fd93027cfad701dbffbe005efaa905edfa9cfa4cfb23ff25faf0fa26059d02cb0545047a0098fc6bfbc7023efde90118ffdcfe3bff7601c9fcf4fccd0518050efbc1fff9fa71004e05ee00c0045805c20188052d0277fd5801ab054afd9d029efb9dfaa304d2011304a2fa5a0212ff210362037efa01fd2afa73046a00470146fb3eff1c0017033d01a30564fffe026c055efdbcf9bc03acfb1ffcb5008efae1059d034ffcee04ebfd78ffda01ff02ab0275020e03910388034d04e9024afa820008010cfaabfcb60411036ffa7005cdfc71fbc80251fe5005f7fc1d0001fc5efc580402fd89fbeefcf3fa52051bffb604b8059ffc2c057b033606d0fbd0015500
tv_dec_mp = 0x7f0670062300aaf92a00d5ff44000900def92b00daf937fac9ffcef9d2ff0a065700fcffdaf90300acf9fcf955fa800677068bf99bffb7f95a06a5f93b066d06ffff5806b3f950ffceff6f06f3ff3b06f705b2f98eff8cf92d00c6ff1306570054ff09fa97f9610692f93600daf9a1ff5406e2ffbef966060000b7ffb8f98f005606b0ff2300330687f9340017069bff4006f7ff23000c06c2ff80ff070061063c067dffaef94106acff8cff230032066f0659ff2a00e6f93a06a1ff5a00500651064400780688f9beff4d008dffdbf99eff330638008bff70000e00d7ff240653068ff92d06f2f9fcff3c0678001200900061005506c0ffc5fff5ffcdff1706ddff5406c9ffa5f91200720687f933003406d4ff0d002b0030003b06d3ff66061bfad6f9a7f9b5ff7900020687001800d3f97506aaf977064c06e3ffc8ff1200bff92700100692ffe2ffa0f988ffdeff2800c3f998f9c8f9050076ffa30052003306bdf91efa7e06aeff96f91e009ff95f0652063f062600edf9e6f9d9f95a067206e4ffa9f963008df9ccffc2f974ffe20594000506c3f9d1ff1b0011facfff24062106f2ffa5ff3806c6ffc1f9c5ff7c063200afff3906930057000600ff05c8ff440094f9aaf92f00b100f105f3ffaffff8f90f0090ffc9ffb300efffe1f93906beff170652062d00def915002a00f8ff210084004606caf99ff9d0ffabff
tv_dec_m = 0x0badf4fba64b5e4d59898d998d822f846aa1271f250eaff7554d53894c822d38   ### This is hashed tv_enc_m


class Rq:
    """
    Name:        Rq
    12 bits * 256 = 384 bytes
    """

    def __init__(self):
        self.coeff = [0 for x in range(n)]

    def __repr__(self):
        return str(list(map(hex, self.coeff)))

    def __getitem__(self, index):
        return self.coeff[index]

    def __eq__(self, other):
        return self.coeff == other.coeff

    def __add__(self, other):
        tmp = self.__class__()
        for i in range(n):
            tmp.coeff[i] = (self.coeff[i] + other.coeff[i]) % q ### reduction
            #上の%qで値が正になるので、ref実装に合わせるため[-q/2,q/2]の範囲に戻す。
            if tmp.coeff[i] > 1664:
                tmp.coeff[i] -= q 
        return tmp

    def __sub__(self, other):
        tmp = self.__class__()
        for i in range(n):
            tmp.coeff[i] = (self.coeff[i] - other.coeff[i]) % q ### reduction
            #上の%qで値が正になるので、ref実装に合わせるため[-q/2,q/2]の範囲に戻す。
            if tmp.coeff[i] > 1664:
                tmp.coeff[i] -= q 
        return tmp

    def __matmul__(self, other: Rq) -> Rq:
        tmp = self.__class__()
        for i in range(0, n, 2):
            tmp.coeff[i] = self.coeff[i+1] * other.coeff[i+1]
            tmp.coeff[i] = tmp.coeff[i] * 17**(2*tree[i//2] + 1)
            tmp.coeff[i] += self.coeff[i] * other.coeff[i]
            tmp.coeff[i] = tmp.coeff[i] % q
            tmp.coeff[i+1] = self.coeff[i] * other.coeff[i+1]
            tmp.coeff[i+1] += self.coeff[i+1] * other.coeff[i]

        return tmp

    @classmethod
    def ntt(cls, poly_in):
        # Straight forward version
        poly_out = cls()
        for i in range(128):
            for j in range(128):
                zeta = zetas[(2*tree[i]+1)*j % n]
                poly_out.coeff[2*i] += poly_in.coeff[2*j] * zeta
                poly_out.coeff[2*i+1] += poly_in.coeff[2*j+1] * zeta
        
        # # FFT version
        # poly_out = copy.deepcopy(poly_in)
        # kk = 1
        # for len in [128, 64, 32, 16, 8, 4, 2]:
        #     for start in range(0, 256, 2*len):
        #         zeta = 17**tree[kk]
        #         kk += 1
        #         for j in range(start, start + len):
        #             t = zeta * poly_out.coeff[j + len]
        #             poly_out.coeff[j + len] = poly_out.coeff[j] - t
        #             poly_out.coeff[j] = poly_out.coeff[j] + t

        # Reduction
        for i in range(n):
            poly_out.coeff[i] %= q
            #上の%qで値が正になるので、ref実装に合わせるため[-q/2,q/2]の範囲に戻す。
            if poly_out.coeff[i] > 1664:
                poly_out.coeff[i] -= q 

            #bit_reverse = int(f'{i:08b}'[::-1], 2)

        return poly_out

    @classmethod
    def intt(cls, poly_in):
        # FFT version
        poly_out = copy.deepcopy(poly_in)
        kk = 127
        for len in [2, 4, 8, 16, 32, 64, 128]:
            for start in range(0, 256, 2*len):
                zeta = 17**tree[kk]
                kk -= 1
                for j in range(start, start + len):
                    t = poly_out.coeff[j]
                    poly_out.coeff[j] = t + poly_out.coeff[j+len]
                    poly_out.coeff[j+len] = zeta * (poly_out.coeff[j+len] - t)

        # Reduction
        for i in range(n):
            poly_out.coeff[i] *= 3303 ### Multiply every entry by 128^-1
            poly_out.coeff[i] %= q
            #上の%qで値が正になるので、ref実装に合わせるため[-q/2,q/2]の範囲に戻す。
            if poly_out.coeff[i] > 1664:
                poly_out.coeff[i] -= q 

            #bit_reverse = int(f'{i:08b}'[::-1], 2)

        return poly_out

    @classmethod
    def sample_uniform(cls, rho, j, i) -> Rq:
        poly = cls()
        s = hashlib.shake_128()
        s.update(bytes.fromhex(hex(rho*256*256 + j * 256 + i)[2:]))
        xof_out = bytes.fromhex(s.hexdigest(672))

        sample_cnt = 0
        for i in range(0, 672, 3):
            val = xof_out[i:i+3]
            d1 = val[0] + 256 * (val[1] & 0xf)
            d2 = (val[1] >> 4) + 16 * val[2]
            if(d1 < q and sample_cnt < n):
                poly.coeff[sample_cnt] = d1
                sample_cnt += 1
            if(d2 < q and sample_cnt < n):
                poly.coeff[sample_cnt] = d2
                sample_cnt += 1
        
        return poly

    @classmethod
    def sample_cbd(cls, sigma, nonce,  eta):

        ### PRF part
        poly = cls()
        s = hashlib.shake_256()
        s.update(bytes.fromhex(hex(sigma*256 + nonce)[2:]))
        prf_out = bytes.fromhex(s.hexdigest(192))

        ### CBD part
        if eta == 3:
            for i in range(256//4):
                t = int.from_bytes(prf_out[i*3:i*3+3], 'little')    ### By 24bits
                d = t & 0x00249249;
                d += (t>>1) & 0x00249249
                d += (t>>2) & 0x00249249

                for j in range(4):
                    a = (d >> (6*j)) & 0x07
                    b = (d >> (6*j + 3)) & 0x07
                    poly.coeff[4*i + j] = a - b
                    #負数を利用

        elif eta == 2:
            for i in range(256//8):
                t = int.from_bytes(prf_out[i*4:i*4+4], 'little')    ### By 32bits
                d = t & 0x55555555;
                d += (t>>1) & 0x55555555

                for j in range(8):
                    a = (d >> (4*j)) & 0x03
                    b = (d >> (4*j + 2)) & 0x03
                    poly.coeff[8*i + j] = a - b
                    #負数を利用
        else:
            exit(-1)

        return poly

    def encode(self) -> int:
        val = 0
        for i in range(0, n, 2):
            elem0 = self.coeff[i]
            elem1 = self.coeff[i+1]

            if elem0 < 0:
                elem0 += q
            if elem1 < 0:
                elem1 += q

            val <<= 8
            val += elem0 & 0xff
            val <<= 8
            val += ((elem1 & 0xf) << 4) | (elem0 >> 8)
            val <<= 8
            val += elem1 >> 4

        return val

    @classmethod
    def decode(cls, barray) -> Rq:
        ### d = 12
        poly = cls()
        for i in range(256//2):
            b0 = barray[3*i]
            b1 = barray[3*i+1]
            b2 = barray[3*i+2]

            uh = b1 >> 4
            lh = b1 & 0x0f

            poly.coeff[2*i] = (lh << 8) | b0
            poly.coeff[2*i+1] = (b2 << 4) | uh
        
        return poly
        
    @classmethod
    def msgdecode(cls, msg):
        ### d = 1
        poly = cls()
        msg = msg.to_bytes(32, 'big')
        for i in range(32):
            t = msg[i]
            for j in range(8):
                bit = (t >> j) & 0x01
                if bit:
                    poly.coeff[8*i+j] = 1665
                else:
                    poly.coeff[8*i+j] = 0
        
        return poly
    
    @classmethod
    def msgencode(cls, poly: Rq) -> int:
        ### d = 1
        msg = 0
        for i in range(32):
            t = 0
            for j in range(8):
                coeff = poly.coeff[8*i+j]
                coeff <<= 1
                coeff += 1665
                coeff *= 80635
                coeff >>= 28
                coeff &= 1
                t |= coeff << j
            msg <<= 8
            msg |= t
        return msg

    @classmethod
    def polyvecCompEncode(cls, polyvec):
        ### d = 10
        barray = bytearray()
        ### compress and encode
        for i in range(k):
            for j in range(256//4):
                list_t = [0] * 4
                for kk in range(4):
                    list_t[kk] = polyvec[i][j*4+kk]
                    if list_t[kk] < 0:
                        list_t[kk] += q
                    list_t[kk] = (((list_t[kk] << 10) + 1665)*1290167) >> 32    ###  & 0x3ffいらない？
                
                barray.append(list_t[0] & 0xff)
                barray.append(list_t[0] >> 8 | (list_t[1] << 2) & 0xff)
                barray.append(list_t[1] >> 6 | (list_t[2] << 4) & 0xff)
                barray.append(list_t[2] >> 4 | (list_t[3] << 6) & 0xff)
                barray.append(list_t[3] >> 2)

        return barray

    def polyCompEncode(self):
        ### d = 4
        barray = bytearray()
        ### compress and encode
        for i in range(256//8):
            list_t = [0] * 8
            for j in range(8):
                list_t[j] = self.coeff[i*8+j]
                if list_t[j] < 0:
                    list_t[j] += q
                list_t[j] = ((((list_t[j] << 4) + 1665)*80635) >> 28) & 0xf
            
            barray.append(list_t[0] | list_t[1] << 4)
            barray.append(list_t[2] | list_t[3] << 4)
            barray.append(list_t[4] | list_t[5] << 4)
            barray.append(list_t[6] | list_t[7] << 4)

        return barray

    @classmethod
    def polyvecDecodeDecomp(cls, barray: bytearray) -> polyvec:
        ### d = 10
        polyvec = [Rq() for x in range(k)]
        list_t = [0] * 4

        ### decode and decompress
        for i in range(k):
            for j in range(256//4):
                list_int= [x for x in barray[i*320+j*5:i*320+j*5+5]]
                list_t[0] = (list_int[0] >> 0) | (list_int[1] << 8)
                list_t[1] = (list_int[1] >> 2) | (list_int[2] << 6)
                list_t[2] = (list_int[2] >> 4) | (list_int[3] << 4)
                list_t[3] = (list_int[3] >> 6) | (list_int[4] << 2)

                for kk in range(4):
                    polyvec[i].coeff[4*j+kk] = ((list_t[kk] & 0x3ff) * q + 512) >> 10

        return polyvec

    @classmethod
    def polyDecodeDecomp(cls, barray: bytearray) -> Rq:
        ### d = 4
        poly = Rq()
        list_t = [0] * 4

        ### decode and decompress
        for i in range(256//2):
            integer = barray[i]
            poly.coeff[2*i + 0] = ((integer & 0xf) * q + 8) >> 4
            poly.coeff[2*i + 1] = ((integer >>  4) * q + 8) >> 4

        return poly


def hash_H(din: int) -> str:
    s = hashlib.sha3_256()
    s.update(din.to_bytes((din.bit_length()+7)//8, 'big'))
    return f'{s.hexdigest():064}'

def hash_G(din: int) -> str:
    s = hashlib.sha3_512()
    s.update(din.to_bytes((din.bit_length()+7)//8, 'big'))
    return f'{s.hexdigest():0128}'

def KDF(din: int) -> str:
    s = hashlib.shake_256()
    s.update(din.to_bytes((din.bit_length()+7)//8, 'big'))
    K = s.hexdigest(32)

    return K

class MyKyber:
    """
    Name:        MyKyber
    """

    def __init__(self):
        pass

    def genA(self, rho, transpose = False) -> list[Rq][Rq]:
        A = []
        for i in range(k):
            list_temp = []
            for j in range(k):
                if transpose:
                    list_temp.append(Rq.sample_uniform(rho, i, j))
                else:
                    list_temp.append(Rq.sample_uniform(rho, j, i))
            A.append(list_temp)
        return A

    def unpack(self, arr) -> int:
        val = 0
        for poly in np.array(arr).flatten():
            for elem in poly:
                if elem < 0:
                    #ref実装のテストベクタに合わせるため16ビット符号付数に変換
                    elem += 0x10000
                val <<= 16
                # Little endian
                val += elem >> 8
                val += (elem & 0xff) << 8
        return val

    def cpa_keygen(self, d):
        Gout = hash_G(d)
        rho = int(Gout[:64], 16)
        sigma = int(Gout[64:], 16)
        assert rho == tv_rho, f'{rho} != {tv_rho}'
        assert sigma == tv_sigma, f'{sigma} != {tv_sigma}'

        A = self.genA(rho)
        assert self.unpack(A) == tv_A, f'{A} != {tv_A:x}'

        s = []
        s.append(Rq.sample_cbd(sigma, 0, 3))
        s.append(Rq.sample_cbd(sigma, 1, 3))
        assert self.unpack(s) == tv_s, f'{s} != {tv_s:x}'

        e = []
        e.append(Rq.sample_cbd(sigma, 2, 3))
        e.append(Rq.sample_cbd(sigma, 3, 3))
        assert self.unpack(e) == tv_e, f'{e} != {tv_e:x}'

        ntt_s = [Rq.ntt(s[0]), Rq.ntt(s[1])]
        assert self.unpack(ntt_s) == tv_s_, f'{ntt_s} != {tv_s_:x}'

        ntt_e = [Rq.ntt(e[0]), Rq.ntt(e[1])]
        assert self.unpack(ntt_e) == tv_e_, f'{ntt_e} != {tv_e_:x}'

        # Matrix-vector multiplication
        As = [Rq() for x in range(k)]
        for i in range(k):
            for j in range(k):
                As[i] = As[i] + (A[i][j] @ ntt_s[j])
        assert self.unpack(As) == tv_As, f'{As} != {tv_As:x}'
        
        ntt_t = [As[i] + ntt_e[i] for i in range(k)]
        assert self.unpack(ntt_t) == tv_t_red, f'{ntt_t} != {tv_t_red:x}'

        pk = (((ntt_t[0].encode() << 12*n) | ntt_t[1].encode()) << 256) | rho
        assert pk == tv_pk, f'{pk:x} != {tv_pk:x}'

        sk = ((ntt_s[0].encode() << 12*n) | ntt_s[1].encode())
        assert sk == tv_sk, f'{sk:x} != {tv_sk:x}'

        ### pk and sk are int type
        return pk, sk

    def cca_keygen(self, z: int, d: int) -> bytearray:
        pk, sk_ = self.cpa_keygen(d)
        H = int(hash_H(pk), 16).to_bytes(32, 'big')
        sk_ = sk_.to_bytes(768, 'big')
        pk = pk.to_bytes(768 + 32, 'big')
        z = z.to_bytes(32, 'big')
        sk = sk_ + pk + H + z
        assert int.from_bytes(sk, 'big') == tv_cca_sk, f'{sk:x} != {tv_cca_sk:x}'

        ### pk and sk are byte array
        return pk, sk
    
    def enc(self, pk: bytearray, m: str, coin: int) -> bytearray:
        t_ = [Rq.decode(pk[12*32*i:]) for i in range(k)]
        assert self.unpack(t_) == tv_enc_t_, f'{t_} != {tv_enc_t_:x}'

        rho = int.from_bytes(pk[-32:], 'big')
        assert rho == tv_enc_rho, f'{rho} != {tv_enc_rho}'

        At = self.genA(rho, True)
        assert self.unpack(At) == tv_enc_At, f'{At} != {tv_enc_At:x}'

        y = []
        y.append(Rq.sample_cbd(coin, 0, 3))
        y.append(Rq.sample_cbd(coin, 1, 3))
        assert self.unpack(y) == tv_enc_y, f'{y} != {tv_enc_y:x}'

        e1 = []
        e1.append(Rq.sample_cbd(coin, 2, 2))
        e1.append(Rq.sample_cbd(coin, 3, 2))
        assert self.unpack(e1) == tv_enc_e1, f'{e1} != {tv_enc_e1:x}'

        e2 = Rq.sample_cbd(coin, 4, 2)
        assert self.unpack(e2) == tv_enc_e2, f'{e2} != {tv_enc_e2:x}'

        ntt_y = [Rq.ntt(y[i]) for i in range(k)]
        assert self.unpack(ntt_y) == tv_enc_y_, f'{ntt_y} != {tv_enc_y_:x}'

        # Matrix-vector multiplication
        Aty = [Rq() for x in range(k)]
        for i in range(k):
            for j in range(k):
                Aty[i] = Aty[i] + (At[i][j] @ ntt_y[j])
        #assert self.unpack(Atr) == tv_enc_Aty, f'{Atr} != {tv_enc_Aty:x}'  # tvは逆モンゴメリドメインにあるので合わない。

        u = [Rq.intt(Aty[i]) + e1[i] for i in range(k)]
        assert self.unpack(u) == tv_enc_u, f'{u} != {tv_enc_u:x}' 

        mu = Rq.msgdecode(tv_enc_hashed_m)
        assert self.unpack(mu) == tv_enc_mu, f'{mu} != {tv_enc_mu:x}' 

        # Vector-vector multiplication
        tty = Rq()
        for i in range(k):
                tty = tty + (t_[i] @ ntt_y[i])
        v = Rq.intt(tty) + e2 + mu
        assert self.unpack(v) == tv_enc_v, f'{v} != {tv_enc_v:x}'

        c1 = Rq.polyvecCompEncode(u)    ### 640 bytes
        assert int.from_bytes(c1, 'big') == tv_enc_c1, f'{c1} != {tv_enc_c1:x}'

        c2 = v.polyCompEncode()         ### 128 bytes
        assert int.from_bytes(c2, 'big') == tv_enc_c2, f'{c2} != {tv_enc_c2:x}'

        return c1 + c2
    
    def cca_enc(self, pk: bytearray, m: int) -> (bytearray, str):
        m = hash_H(m)
        Kr = hash_G(int(m+hash_H(int.from_bytes(pk, 'big')), 16))
        K = Kr[:64]
        r = int(Kr[64:], 16)
        c = self.enc(pk, m, r)
        ### KDF
        kdf_in = int(K + hash_H(int.from_bytes(c, 'big')), 16)
        K = KDF(kdf_in)

        return c, K

    def dec(self, dk: bytearray, c: bytearray) -> int:
        u = Rq.polyvecDecodeDecomp(c)
        assert self.unpack(u) == tv_dec_rounded_u, f'{u} != {tv_dec_rounded_u:x}' 

        v = Rq.polyDecodeDecomp(c[32*du*k:])
        assert self.unpack(v) == tv_dec_rounded_v, f'{v} != {tv_dec_rounded_v:x}'

        ntt_s = [Rq.decode(dk), Rq.decode(dk[384:])]    ### Should be run k times
        assert self.unpack(ntt_s) == tv_dec_red_s, f'{ntt_s} != {tv_dec_red_s:x}'   ### tv_s_ not reduced.

        ntt_u = [Rq.ntt(u[i]) for i in range(k)]
        assert self.unpack(ntt_u) == tv_dec_u_, f'{ntt_u} != {tv_dec_u_:x}'

        # Vector-vector multiplication
        stu = Rq()
        for i in range(k):
                stu = stu + (ntt_s[i] @ ntt_u[i])
        intt_stu = Rq.intt(stu)
        assert self.unpack(intt_stu) == tv_dec_stu, f'{intt_stu} != {tv_dec_stu:x}'

        mp = v - intt_stu
        assert self.unpack(mp) == tv_dec_mp, f'{mp} != {tv_dec_mp:x}'

        m = Rq.msgencode(mp)
        assert m == tv_dec_m, f'{m} != {tv_dec_m:x}'

        return m

    def cca_dec(self, c: bytearray, sk: bytearray):
        dk = sk[:384*k]
        pk = sk[384*k:768*k+32]
        h = sk[768*k+32:768*k+64]
        z = sk[768*k+64:768*k+96]
        mp = self.dec(dk, c)

        Kprp = hash_G(int.from_bytes(mp.to_bytes(32, 'big') + h, 'big'))
        Kp = Kprp[:64]
        rp = int(Kprp[64:], 16)
        cp = self.enc(pk, mp, rp)
        
        ### FO transform
        if c == cp:
            kdf_in = int(Kp + hash_H(int.from_bytes(c, 'big')), 16)
            K = KDF(kdf_in)
        else:
            kdf_in = int(z + hash_H(int.from_bytes(c, 'big')), 16)
            K = KDF(kdf_in)

        return K


inst = MyKyber()
pk, sk = inst.cca_keygen(tv_z, tv_d)
c, K = inst.cca_enc(pk, tv_enc_m)
print(f'Bob (enc) side shared secret K: {K}')

K = inst.cca_dec(c, sk)
print(f'Alice (dec) side shared secret K: {K}')

